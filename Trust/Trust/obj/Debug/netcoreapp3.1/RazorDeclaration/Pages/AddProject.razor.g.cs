// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Trust.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Trust;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Trust.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Trust.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Trust.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\_Imports.razor"
using Trust.Entities;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/addProject")]
    public partial class AddProject : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 216 "C:\Users\TOWHID\Desktop\Blazor Project Final\Trust\Trust\Pages\AddProject.razor"
       
    Project project = new Project();
    ProjectStatusName projectStatusName = new ProjectStatusName();
    List<Team> teams = new List<Team>();
    List<ProjectStatusName> projectStatusNames = new List<ProjectStatusName>();
    List<Project> projects = new List<Project>();
    bool hasAdded = false;
    protected override async Task OnInitializedAsync()
    {
        //book.PubYear = (short)DateTime.Now.Year;
        project.ProjectStart = DateTime.Now;
        project.ProjectEnd = DateTime.Now;
        project.ProjectDeadline = DateTime.Now;
        teams = await TeamService.FetchAll();
    }
    protected async Task CreateProject()
    {
        if (hasAdded)
        {
            navigationManager.NavigateTo("/listProject");
        }
        else
        {
            await ProjectService.Create(project);
            projectStatusNames = await ProjectStatusService.FetchAll(0);
            hasAdded = !hasAdded;
        }
    }
    protected async Task CheckChanged(ProjectStatusName projectStatusName,
                                      object checkValue)
    {
        int ProjectId = 0;
        if (project.ProjectId > ProjectId)
        {
            ProjectId = (int)project.ProjectId;
            projectStatusNames = await ProjectStatusService.FetchAll(ProjectId);
            if ((bool)checkValue)
            {
                // insert
                projectStatusName.ProjectId = ProjectId;
                await ProjectStatusService.Create(projectStatusName);
            }
            else
            {
                //delete
                projectStatusName.StatusId = 0;
                await ProjectStatusService.Delete
                      (ProjectId, projectStatusName.StatusId);
            }
            projectStatusNames = await ProjectStatusService.FetchAll(ProjectId);
        }
    }
    void Cancel()
    {
        navigationManager.NavigateTo("/listProject");
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.AspNetCore.Components.NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IProjectStatusService ProjectStatusService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ITeamService TeamService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IProjectService ProjectService { get; set; }
    }
}
#pragma warning restore 1591
